name: Translate README and Create PR

on:
  workflow_dispatch:
    inputs:
      languages:
        description: 'Languages to translate to (example: ["AR","BN","DE","ES","FR","HI"] or ["ZH","IT","PT","UK","UR"])'
        required: true
        type: string

jobs:
  translate_and_create_pr:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      pull-requests: 'write'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCS_SA_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.4.0
      with:
        project_id: redcap-364614
        service_account_key: ${{ secrets.GCS_SA_KEY }}
        export_default_credentials: true

    - name: get_token
      id: get_token
      run: |
        gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
        ACCESS_TOKEN=$(gcloud auth print-access-token)
        echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_OUTPUT

    - name: Upload README.html to sag_readme bucket
      run: |
        gcloud init
        gcloud storage cp README.html gs://sag_readme/

    - name: Create sag_readme_translated bucket
      run: |
        gcloud storage buckets create gs://sag_readme_translated

    - name: Translate using Google's batchTranslateText API
      run: |
        
        API_RESPONSE=$(curl -s -X POST -H "Authorization: Bearer ${{ steps.get_token.outputs.ACCESS_TOKEN }} -H "Content-Type: application/json" -H "x-goog-user-project: redcap-364614" --data '{"sourceLanguageCode": "en", "targetLanguageCodes": "${{ inputs.languages }}", "inputConfigs": [{"gcsSource": {"inputUri": "gs://sag_readme/README.html"},"mimeType": "text/html"}],"outputConfig": {"gcsDestination": {"outputUriPrefix": "gs://sag_readme_translated/"}}}" "https://translation.googleapis.com/v3/projects/redcap-364614/locations/us-central1:batchTranslateText")  

        # Extract the operation ID from the response
        OPERATION_ID=$(echo "$API_RESPONSE" | jq -r '.name')

        echo $OPERATION_ID
        
        echo "OPERATION_ID=$OPERATION_ID" >> $GITHUB_OUTPUT
      id: translate

    - name: Wait for translation to complete
      run: |
        status=$(curl -s -H "Authorization: Bearer ${{ steps.get_token.outputs.ACCESS_TOKEN }}" \
                  "https://translation.googleapis.com/language/translate/v2/operations/${{ steps.translate.outputs.OPERATION_ID }}")
        until [ "$(echo "$status" | jq -r '.done')" == "true" ]; do
          echo "Translation not yet complete, sleeping for 60 seconds..."
          sleep 60
          status=$(curl -s -H "Authorization: Bearer ${{ steps.get_token.outputs.ACCESS_TOKEN }}" \
                    "https://translation.googleapis.com/language/translate/v2/operations/${{ steps.translate.outputs.OPERATION_ID }}")
        done
        echo "Translation completed."

    - name: Download translated files
      run: |
        mkdir translated_files
        #gsutil -m cp gs://sag_readme_translated/* translated_files/
        gcloud storage cp gs://sag_readme_translated2/* translated_files/

    - name: Cleanup bucket
      if: always()
      run: |
        gcloud storage rm gs://sag_readme_translated --recursive

    - name: Create Pull Request
      run: |
        # Configure the GitHub CLI
        echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

        # Create a new branch for the translated files
        git checkout -b translated-branch

        # Copy the translated files to the repository
        cp -r translated_files/* .

        # Commit and push the changes
        git add .
        git commit -m "Add translated files"
        git push origin translated-branch

        # Create a pull request
        gh pr create --base main --head translated-branch --title "Translated README"
